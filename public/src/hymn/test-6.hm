import console

global = 123

interface goo {
  x y z
  get()
  set()
}

class zoo implements goo {
  constructor(x, flag=2) {
    this.x = x
    this.y = "%{x}"
  }
}

-- optional type enforcement
function input(@zoo object, @int num) {
  zoo.eat(num)
}

-- constant or variables
const x = 0
var z = 0

-- class functions are syntactic sugar for regular functions with `this`
function zoo.string() {
  return "(%{this.x}, %{this.y})"
}

function foo(x, y) {
  list = []
  table = {}
  if x != 0 {
    print(x)
  } else {
    y += 1
  }
  list.push(4)
  table['key'] = list
  return y
}

function bar() {
  for i = 0, i < 10, i += 1 {
    if i < 0 { continue }
    z = zoo.new(i)
    console.log(z)
  }
}

foo(2, 3)
